name: Playwright autotests run

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose test suite
        required: true
        type: choice
        default: smoke
        options:
          - smoke
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:

  download-history:
    runs-on: ubuntu-latest
    name: Download allure history
    steps:
      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.14"
      - name: Download github-pages
        run: > 
          ARTIFACT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/humansinc1/automated_tests_for_ecommerce_with_Playwright/actions/artifacts?name=allure-results" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/humansinc1/automated_tests_for_ecommerce_with_Playwright/actions/artifacts/$ARTIFACT_ID/zip 
          -o artifacts.zip &&
          REPORT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/humansinc1/automated_tests_for_ecommerce_with_Playwright/actions/artifacts?name=github-pages" 
          | python3 -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id'])")
          && 
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/humansinc1/automated_tests_for_ecommerce_with_Playwright/actions/artifacts/$REPORT_ID/zip 
          -o pages.zip
      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/_site/history/* allure-results && cp -r pages_history/_site/history allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-new
          path:
            allure-results
          retention-days: 1

  run-tests:
    needs: download-history
    runs-on: ubuntu-latest
    name: Run playwright autotests
    steps:
      - name: Checkout autotests
        uses: actions/checkout@v5
      - name: Set up python
        uses: actions/setup-python@v6
        with:
          python-version: "3.14"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: install Playwright dependencies and browsers
        run: playwright install && playwright install-deps
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: allure-*
          merge-multiple: true
          path: allure-results
      - name: Run all tests
        if: "github.event.inputs.deployment_target == 'all'"
        run: pytest --alluredir=allure-results
        continue-on-error: true
      - name: Run smoke tests
        if: "github.event.inputs.deployment_target == 'smoke'"
        run: pytest -m smoke --alluredir=allure-results
        continue-on-error: true
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: run-tests
    name: Generate report
    steps:
      - name: Install Java
        uses: actions/setup-java@v5
        with:
          distribution: 'microsoft'
          java-version: '17'
      - name: Install Allure
        run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.35.1/allure-2.35.1.tgz && sudo tar xf allure-2.35.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.35.1/bin/allure /usr/bin/allure
      - name: Generate report
        run: allure generate -c allure-results -o _site
      - name: Save report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1
  
  publish-report:
    needs: generate-report
    name: Publish allure report on Github Pages
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./_site
      - name: Upload artifacts to Pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: _site/
      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4
